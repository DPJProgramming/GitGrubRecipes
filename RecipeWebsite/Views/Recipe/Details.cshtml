@model RecipeDetailsViewModel
@using Newtonsoft.Json;

@{
    ViewData["Title"] = "Details";
}
<h1>@Model.Recipe.Title</h1>

<dl class="row">
    <dt class="col-sm-2">
        Recipe By:
    </dt>
    <dd class="col-sm-10">
        @Model.Recipe.Author.UserName
    </dd>
</dl>

<!--button for sending recipeId to controller to add to favorites-->
@if (Model.CurrentUser != null)
{
    <button type="button" id="favorite" class="btn btn-success float-end" data-model="@Model.Recipe?.RecipeId">
        @(Model.CurrentUser.MyFavorites != null && Model.CurrentUser.MyFavorites.Any(r => r.RecipeId == Model.Recipe.RecipeId) ? "Remove from Favorites" : "Add to Favorites")
    </button>
}


<div>
    <img src="@Model.Recipe.ImageUrl" alt="Recipe-Picture" width="300" />
    <dl class="row">   
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.Directions)
        </dt>
        <dd class="col-sm-10">
            @Html.Raw(Model.Recipe.Directions)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Recipe.Ingredients)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Recipe.Ingredients != null && Model.Recipe.Ingredients.Any())
            {
                <div class="ingredients-container">
                    @foreach (var ingredient in Model.Recipe.Ingredients)
                    {
                        <div class="ingredient-row">
                            <span>@ingredient.Name</span>
                            <span>@ingredient.Amount</span>
                        </div>
                    }
                </div>
            }
            else
            {
                <p>No ingredients found.</p>
            }
        </dd>
        
    </dl>
</div>
<div>
    @if (Model.CurrentUser != null && Model.Recipe.Author.Id == Model.CurrentUser.Id)
    {
        <a asp-action="Edit" asp-route-id="@Model.Recipe?.RecipeId">Edit</a>
    }
</div>
<br />

<!--Comment section-->
<form id="new-comment">
    <div>
        <h3>Comments</h3>
        <br />
        <textarea rows="5" cols="80" id="comment-text"></textarea>
        <input type="hidden" data-model="@Model.Recipe" />
        <button type="button" id="confirm-comment">Add Comment</button>
    </div>
</form>
<br />

@if (Model.Recipe.Comments != null && Model.Recipe.Comments.Any()) {
    <div>
        @foreach (Comment comment in Model.Recipe.Comments){
            <div class="card">
                <div class="card-header">
                    <h5 id="comment-author" data-model="@comment.CommentAuthor.Id">@comment.CommentAuthor.UserName</h5>
                </div>

                <div class="card-body">
                    <p id="comment-content" class="card-text">@comment.Content</p>
                    <button type="button" class="delete-comment" data-model="@comment.CommentId">Delete Comment</button>
                    <button class="btn btn-primary" data-toggle="modal" data-target="#editModal" data-url="@Url.Action("Edit", "Comment", new { id = comment.CommentId })">Edit</button>
                </div>
                
            </div>
            <br />

            <!--for edit comment modal-->
            <div class="modal fade" id="editModal" role="dialog">
                <div class="modal-dialog" role="document">
                    <div class="modal-content">
                        <div class="modal-body">
                            <partial name="/Views/Comment/Edit.cshtml" for="@comment">
                            <!-- @Html.Partial("/Views/Comment/Edit.cshtml", comment) -->
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
    <br />
}

<style>
    .ingredients-container {
        display: flex;
        flex-direction: column;
        width: 50%;
    }

    .ingredient-row {
        display: flex;
        justify-content: space-between;
        border-bottom: 1px solid gray;
        padding: 5px 0;
    }
</style>

<!-- code for add to favorites and comments-->
@section Scripts{

    <!--For adding to favorites-->
    <script>
        $(function () {
            var recipeId = $('#favorite').data('model');

            $('#favorite').click(function () {
                //Send data to the server
                $.ajax({
                    url: '/Recipe/ToggleFavorite',
                    type: 'POST',
                    data: JSON.stringify(recipeId),
                    contentType: 'application/json'
                })
                    .done(function (result) {
                        // alert(result.message);
                        if (result.message === "Added to favorites") {
                            $('#favorite').text("Remove from Favorites");
                        } else {
                            $('#favorite').text("Add to Favorites");
                        }
                    })
                    .fail(function (xhr) {
                        alert("An error occurred: " + xhr.responseText);
                    });
            });
        });
    </script>

    <!--For adding a comment-->
    <script>
        $(document).ready(function () {
            ;
            $('#confirm-comment').click(function () {
                //text from comment textbox
                var commentText = $('#comment-text').val();

                //converts the current recipe into data that can be sent
                var recipeData = @Html.Raw(JsonConvert.SerializeObject(Model.Recipe, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore }));
                
                //creates an onbject with the needed data
                var sendData = {
                    commentText: commentText,
                    recipe: recipeData
                };
                //sends data to controller
                $.ajax({
                    url: '@Url.Action("Create", "Comment")',
                    type: 'POST',
                    data: JSON.stringify(sendData),
                    contentType: 'application/json',
                    success: function (result) {
                        location.reload(true);
                    },
                    error: function (xhr) {
                        alert("Adding Comment Failed");
                        console.error(xhr.responseText);
                    }
                });
            });
        });
    </script>

    <!--For deleting a comment-->
    <script>
        $(document).ready(function () {
            ;
            $('.delete-comment').click(function () {

                var commentId = $(this).data('model') //$('#delete-comment').data('model');
                var authorId = $(this).closest('.card').find('#comment-author').data('model');

                var sendData = {
                    comment: commentId,
                    author: authorId
                };

                $.ajax({
                    url: '@Url.Action("Delete", "Comment")',
                    type: 'POST',
                    data: JSON.stringify(sendData),
                    contentType: 'application/json',
                    success: function (result) {
                        console.log(result);
                        alert(result.message);
                        location.reload(true);
                    },
                    error: function (xhr) {
                        alert("Deleting Comment Failed");
                        console.error(xhr.responseText);
                    }
                });
            });
        });
    </script>

    <!--for edit comment modal-->
    <script>
        $(document).ready(function () {

            $('#editModal').on('hidden.bs.modal', function () {
                $(this).find('.modal-body').html('');
            });

            $('.btn-primary').click(function () {
                var url = $(this).data('url');
                $.get(url).done(function (data) {
                    $('#editModal').find('.modal-body').html(data);
                    $('#editModal').modal('show');
                });
            });

            window.addEventListener('message', function (event) {
                if (event.data === 'closeModal') {
                    $('#editModal').modal('hide');
                }
            });
        });
    </script>
}