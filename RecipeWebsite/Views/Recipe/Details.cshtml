@using Newtonsoft.Json;
@model RecipeWebsite.Models.Recipe

@{
    ViewData["Title"] = "Details";
}

<h1>@Model.Title</h1>

<!--button for sending recipeId to controller to add to favorites-->
    <button type="button" id="favorite" data-model="@Model?.RecipeId">Add To My Favorites</button>

<div>
    <h4>Recipe</h4>
    <hr />
    <img src="@Model.ImageUrl" alt="Recipe-Picture"/>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class="col-sm-10">
                    @Model.Author.UserName
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Ingredients)
        </dt>
        <dd class="col-sm-10">
            @if (Model.Ingredients != null && Model.Ingredients.Any())
            {
                <div class="ingredients-container">
                    @foreach (var ingredient in Model.Ingredients)
                    {
                        <div class="ingredient-row">
                            <span>@ingredient.Name</span>
                            <span>@ingredient.Amount</span>
                        </div>
                    }
                </div>
            }
            else
            {
                <p>No ingredients found.</p>
            }
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Directions)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Directions)
        </dd>
    </dl>

</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.RecipeId">Edit</a> 
    <a asp-action="Index">Back to List</a>
</div>











<!--Comment section-->
<form id="new-comment">
    <label for="comment-text">Add a comment!</label>
    <br />
    <input type="text" id="comment-text" />

    <input type="hidden" data-model="@Model" />

    <button type="button" id="confirm-comment" >Add Comment</button>
</form>

 <br />

@*<div>
    @if (Model.Comments != null && Model.Comments.Any()) {
        @foreach(Comment comment in Model.Comments) {
            <div id="single-comment">
                <div>
                    <h4>@comment.CommentAuthor.UserName</h4>
                </div>
                <div>
                    <p>@comment.Content</p>
                </div>

            </div>
        }
    }
</div>*@

<style>
    .ingredients-container {
        display: flex;
        flex-direction: column;
        width: 50%;
    }

    .ingredient-row {
        display: flex;
        justify-content: space-between;
        border-bottom: 1px solid gray;
        padding: 5px 0;
    }
</style>

<!-- code for add to favorites functionality-->
@section Scripts{
    <script>
        $(document).ready(function (){
            var button = document.getElementById('favorite');
            var buttonData = button.dataset.model;

            $('#favorite').click(function (){

               //Send data to controller
               $.ajax({
                   url: '/Recipe/AddToFavorites',
                   type: 'POST',
                   data: JSON.stringify(buttonData),
                   contentType: 'application/json',

                   success: function (result) {
                       console.log(result);
                       alert(result.message);
                   },
                   error: function (xhr) {
                       alert("no luck");
                   console.error(xhr.responseText);
                   }
               });
            });
        });
    </script>

    <!--For adding a comment-->
    <script>
        $(document).ready(function () {;
            $('#confirm-comment').click(function () {

                //text from comment textbox
                var commentText = $('#comment-text').val(); 

                //converts the current recipe into data that can be sent
                var recipeData = @Html.Raw(JsonConvert.SerializeObject(Model, new JsonSerializerSettings { ReferenceLoopHandling = ReferenceLoopHandling.Ignore }));

                //creates an onbject with the needed data
                var sendData ={
                    commentText: commentText,
                    recipe: recipeData
                };

                //sends data to controller
                $.ajax({
                    url: '@Url.Action("Create", "Comment")',
                    type: 'POST',
                    data: JSON.stringify(sendData),
                    contentType: 'application/json',

                    success: function (result) {
                        console.log(result);
                        alert(result.message);
                    },
                    error: function (xhr) {
                        alert("Adding Comment Failed");
                        console.error(xhr.responseText);
                    }
                });
            });
        });
    </script>
}
